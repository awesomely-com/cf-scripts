var G=typeof document!=="undefined"&&typeof window!=="undefined";function N(Q){Q=Q.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");let X=new RegExp("[\\?&]"+Q+"=([^&#]*)").exec(window.location.search);return X===null?"":decodeURIComponent(X[1].replace(/\+/g," "))}function E(){return window.location.search.substring(1).split("&").reduce((W,X)=>{if(!X)return W;let[Y,Z]=X.split("=");return W[decodeURIComponent(Y)]=decodeURIComponent(Z||""),W},{})}function z(){console.log("URL debugging:",{fullUrl:window.location.href,protocol:window.location.protocol,hostname:window.location.hostname,pathname:window.location.pathname,search:window.location.search,hash:window.location.hash});let Q=window.location.pathname.replace(/^\/|\/$/g,"");if(!Q)return"home";let X=(Q.split("/").pop()||"").replace(/[^a-zA-Z0-9]/g,"-").replace(/-+/g,"-").replace(/^-|-$/g,"");return console.log("Generated page slug:",X||"home"),X||"home"}function F(Q){return new Intl.NumberFormat("en-US",{style:"currency",currency:"USD",maximumFractionDigits:0}).format(Q)}function j(Q,W){let X={...Q};if(!W)return X;return Object.keys(W).forEach((Y)=>{let Z=X[Y],$=W[Y];if(Array.isArray(Z)&&Array.isArray($))X[Y]=[...new Set([...Z,...$])];else if(typeof Z==="object"&&Z!==null&&typeof $==="object"&&$!==null&&!Array.isArray(Z)&&!Array.isArray($))X[Y]=j(Z,$);else if($!==void 0)X[Y]=$}),X}class R{baseUrl="https://funnels-api.awesomely.com/api/keap";getTrackingData(){let Q=E();try{let W=localStorage.getItem("LandingPagePath");if(W)console.log("Found LandingPagePath in localStorage:",W),Q.landing_page_path=W}catch(W){console.warn("Error accessing localStorage:",W)}return Q}async makeRequest(Q,W,X){console.log(`Making API request to ${Q}:`,{method:W,data:X});let Z=await(await fetch(`${this.baseUrl}${Q}`,{method:W,headers:{"Content-Type":"application/json"},body:X?JSON.stringify(X):void 0})).json();return console.log(`API Response from ${Q}:`,Z),Z}async checkSessionValidity(Q){return this.makeRequest(`/check-session-validity?session_key=${Q}`,"GET")}async startSession(Q){return this.makeRequest("/start-payments-api-session?phone_optional=true","POST",Q)}createContactInformationPayload(Q,W,X,Y){let Z={page_slug:z(),opt_in:!0,opt_in_reason:"Opted in via order form",tracking_data:this.getTrackingData(),sales_awesomely_external_key:X};if(!W){let $={first_name:Q.firstName,last_name:Q.lastName,email:Q.email,phone:Q.phone};console.log("No session key found. Using form data:",$),Object.assign(Z,$)}else console.log("Session key found:",W),Z.session_key=W;if(Y)Z.affiliate_id=Y;return Z}async updateContact(Q,W){return this.makeRequest(`/contacts/${Q}`,"PUT",W)}async createOrder(Q){return this.makeRequest("/create-and-charge-order","POST",Q)}async startSimpleSession(Q,W){let X={contact_id:Q,page_slug:W,opt_in:!0,opt_in_reason:"Opted in via order form",tracking_data:this.getTrackingData()};return console.log("Starting simple session with payload:",X),this.makeRequest("/start-payments-api-session","POST",X)}async getContactData(Q){return console.log("Fetching contact data for ID:",Q),this.makeRequest(`/contacts/${Q}`,"GET")}async getSessionKey(Q){return console.log("Getting session key for contact ID:",Q),this.makeRequest("/get-session-key","POST",{contact_id:Q})}}var H=R;class A{config;state;initialized=!1;keapClient;handlePaymentMessage=async()=>{};paymentResponseTimeout=null;pendingProductId=null;static defaultConfig={selectors:{acceptButton:"#tmp_button-11126-188",acceptButton2:"#tmp_button-79590-119",acceptButtonProduct2:"#product-2-button",rejectButton:"#link-94268",paymentContainer:"#payment-container",modal:"#oto-decline-modal",modalSubmitButton:"#retry-payment-submit"},sessionConfig:{expirationHours:2,storageKey:"orderSession"}};constructor(){if(this.config=j(A.defaultConfig,window.KeapOTOConfig||{}),this.state={keapContactId:null,orderId:null,sessionKey:null,urlFriendlySessionKey:null,acceptUrl:null,rejectUrl:null,existingPaymentMethodId:null,stepProducts:null,primaryProductId:null,secondaryProductId:null,contactId:null},this.keapClient=new H,G)window.simulatePaymentDecline=(Q=!0)=>{window._simulatePaymentDeclineEnabled=Q,console.log(`Payment decline simulation ${Q?"ENABLED":"DISABLED"}`),console.log("The next payment attempt will "+(Q?"simulate a decline":"process normally"))}}init(){if(this.initialized=!1,G)document.addEventListener("DOMContentLoaded",()=>{this.checkSessionKey(),this.setupButtonHandlers(),this.initialized=!0});else console.log("Not running in browser environment. Initialization skipped.")}isSessionExpired(Q){let W=this.config.sessionConfig.expirationHours*60*60*1000;return new Date().getTime()-Q>W}deleteExpiredSessionData(){try{localStorage.removeItem(this.config.sessionConfig.storageKey),sessionStorage.removeItem(this.config.sessionConfig.storageKey),console.log("Deleted expired order session from storage")}catch(Q){console.warn("Failed to delete expired order session from storage",Q)}}getOrderSession(){let Q=null;try{let W=localStorage.getItem(this.config.sessionConfig.storageKey);if(W)Q=JSON.parse(W);if(!Q||this.isSessionExpired(Q.timestamp||0)){let X=sessionStorage.getItem(this.config.sessionConfig.storageKey);if(X)Q=JSON.parse(X)}if(Q&&this.isSessionExpired(Q.timestamp||0))return console.log("Order session expired",Q),this.deleteExpiredSessionData(),null;return Q}catch(W){return console.warn("Failed to retrieve order session from storage",W),null}}saveOrderSession(Q){let W={...Q,timestamp:new Date().getTime()};try{localStorage.setItem(this.config.sessionConfig.storageKey,JSON.stringify(W)),sessionStorage.setItem(this.config.sessionConfig.storageKey,JSON.stringify(W)),console.log("Order session saved to storage",W)}catch(X){console.warn("Failed to save order session to storage",X)}}checkSessionKey(){let Q=N("session_key"),W=this.getOrderSession();if(this.state.sessionKey=Q||(W?W.sessionKey:null),this.state.contactId=W?W.contactId:null,!this.state.sessionKey){console.error("No session key found. Upsell page requires a session key."),alert("Session not found. Please return to the main order page.");return}let X=z();this.fetchPageData(X)}async fetchPageData(Q){try{let W={page_slug:Q,session_key:this.state.sessionKey||"",tracking_data:{}};try{let X=await this.keapClient.makeRequest("/start-payments-api-session","POST",W);if(console.log("API Response:",X),X.is_duplicate===!0){if(console.warn("Duplicate order detected"),X.step&&X.step.next_step_url){let Y=X.step.next_step_url,Z=X.order?.url_friendly_session_key||this.state.sessionKey||"";setTimeout(()=>{window.location.href=`${Y}?session_key=${Z}`},3000)}return}this.updateState(X)}catch(X){if(X.status===400&&X.message==="Session has expired")console.log("Received expired session error from API"),this.deleteExpiredSessionData();throw X}}catch(W){console.error("API request failed:",W)}}updateState(Q){if(Q.contact&&Q.contact.id)this.state.keapContactId=Q.contact.keap_contact_id?.toString()||"";if(Q.order)this.state.orderId=Q.order.id?.toString()||null,this.state.sessionKey=Q.order.session_key||null,this.state.urlFriendlySessionKey=Q.order.url_friendly_session_key||null;if(Q.step)this.state.acceptUrl=Q.step.next_step_url||null,this.state.rejectUrl=Q.step.rejected_step_url||null;if(Q.payment&&Q.payment.payment_method_id)this.state.existingPaymentMethodId=Q.payment.keap_payment_method_id||null,console.log("Found existing payment method ID:",this.state.existingPaymentMethodId);if(Q.step&&Q.step.products){this.state.stepProducts=Q.step.products;let W=this.state.stepProducts?.find((Y)=>Y.position==="primary"),X=this.state.stepProducts?.find((Y)=>Y.position==="secondary");this.state.primaryProductId=W?W.id:null,this.state.secondaryProductId=X?X.id:null}}setupButtonHandlers(){let Q=document.getElementById(this.config.selectors.acceptButton);if(Q){let Z=Q.querySelector("a");if(Z instanceof HTMLElement)Z.addEventListener("click",($)=>{$.preventDefault(),this.disableButton(Q,Z),this.handleAcceptClick()});else console.error("Primary accept button link not found within:",this.config.selectors.acceptButton)}else console.error("Primary accept button with ID",this.config.selectors.acceptButton,"not found");let W=document.getElementById(this.config.selectors.acceptButton2);if(W){let Z=W.querySelector("a");if(Z instanceof HTMLElement)Z.addEventListener("click",($)=>{$.preventDefault(),this.disableButton(W,Z),this.handleAcceptClick()});else console.error("Secondary accept button link not found within:",this.config.selectors.acceptButton2)}else console.warn("Secondary accept button with ID",this.config.selectors.acceptButton2,"not found - this is optional");let X=document.getElementById(this.config.selectors.acceptButtonProduct2);if(X){let Z=X.querySelector("a");if(Z instanceof HTMLElement)Z.addEventListener("click",($)=>{$.preventDefault(),this.disableButton(X,Z),this.handleProduct2AcceptClick()});else console.error("Second product accept button link not found within:",this.config.selectors.acceptButtonProduct2)}else console.warn("Second product accept button with ID",this.config.selectors.acceptButtonProduct2,"not found - this is optional");let Y=document.getElementById(this.config.selectors.rejectButton);if(Y)Y.addEventListener("click",()=>{this.handleRejectClick()});else console.error("Reject button with ID",this.config.selectors.rejectButton,"not found")}handleAcceptClick(){this.processPayment(this.state.primaryProductId)}handleProduct2AcceptClick(){this.processPayment(this.state.secondaryProductId)}handleRejectClick(){let Q=`?session_key=${this.state.urlFriendlySessionKey||""}`;if(this.state.rejectUrl)window.location.href=this.state.rejectUrl+Q;else if(console.warn("No reject URL found"),this.state.acceptUrl)window.location.href=this.state.acceptUrl+Q;else alert("Error: Could not determine the next page. Please contact support.")}processPayment(Q){if(!Q){console.error("No product ID provided for payment processing");return}if(this.state.existingPaymentMethodId){if(window._simulatePaymentDeclineEnabled)console.log("SIMULATING PAYMENT DECLINE (testing mode)");console.log("Using existing payment method ID:",this.state.existingPaymentMethodId),this.processPaymentWithMethodId(this.state.existingPaymentMethodId,Q);return}console.error("No payment method ID found for this session")}async processPaymentWithMethodId(Q,W){let X=z(),Y=[];if(this.pendingProductId=W,W!==null)Y.push(W);else if(this.state.primaryProductId!==null)Y.push(this.state.primaryProductId);else if(this.state.stepProducts&&Array.isArray(this.state.stepProducts)&&this.state.stepProducts.length>0)Y.push(this.state.stepProducts[0].id);if(Y.length===0){console.error("No products found to add to the order");return}let Z=N("affiliate"),$={payment_method_id:Q,page_slug:X,product_ids:Y};if(this.state.keapContactId)$.contact_id=this.state.keapContactId;if(this.state.sessionKey)$.session_key=this.state.sessionKey;if(Z)$.affiliate_id=Z;if(window._simulatePaymentDeclineEnabled)console.log("SIMULATING PAYMENT DECLINE (testing mode)"),$.status="declined",window._simulatePaymentDeclineEnabled=!1;try{try{let _=await this.keapClient.createOrder($);if(console.log("Order created:",_),_.payment_status==="failed"||_.payment_status==="declined"||_.payment_status==="error"){console.warn(`Payment ${_.payment_status}: ${_.error||_.message||"Unknown reason"}`),this.showPaymentRetryModal();return}let J=`?session_key=${this.state.urlFriendlySessionKey||""}`;if(_.is_duplicate===!0){if(console.warn("Duplicate order detected"),_.next_step_url)setTimeout(()=>{window.location.href=_.next_step_url+J},3000);else if(_.step&&_.step.next_step_url)setTimeout(()=>{window.location.href=(_.step?.next_step_url||"")+J},3000);return}let q=null;if(_.next_step_url)q=_.next_step_url;else if(_.step&&_.step.next_step_url)q=_.step.next_step_url;else if(this.state.acceptUrl)q=this.state.acceptUrl;if(q)setTimeout(()=>{window.location.href=q+J},3000);else console.warn("No next step URL found")}catch(_){if(_.status===400){if(_.message==="Session expired")console.log("Session expired during payment process"),this.deleteExpiredSessionData()}throw _}}catch(_){console.error("API request failed:",_),this.showPaymentRetryModal()}}async showPaymentRetryModal(){console.log("Showing payment retry modal");let Q=document.querySelector(this.config.selectors.modal);if(!Q)Q=document.createElement("dialog"),Q.id=this.config.selectors.modal.substring(1),Q.innerHTML=`
        <h2>Your credit card was declined, please update your card.</h2>
        <div id="keap-payment-method-container">
          <keap-payment-method id="keap-payment-method" />
        </div>
        <button id="${this.config.selectors.modalSubmitButton.substring(1)}" class="elButton">Click To Continue</button>
      `,document.body.appendChild(Q);Q.showModal();try{if(!this.state.keapContactId){console.error("Contact ID is missing, cannot get session key");return}let W=await this.keapClient.getSessionKey(this.state.keapContactId);console.log("Got new session key for payment retry:",W),await this.setupPaymentRetryForm(W.session_key)}catch(W){console.error("Failed to set up payment retry form:",W)}}async setupPaymentRetryForm(Q){let W=document.querySelector("#keap-payment-method");if(!W){console.error("Payment method element not found in dialog");return}if(W.setAttribute("key",Q),!document.querySelector('script[src="https://payments.keap.page/lib/payment-method-embed.js"]')){let Y=document.createElement("script");Y.src="https://payments.keap.page/lib/payment-method-embed.js",document.body.appendChild(Y)}let X=document.querySelector(this.config.selectors.modalSubmitButton);if(X)X.addEventListener("click",()=>this.handlePaymentRetrySubmit());this.setupPaymentRetryMessageHandler()}setupPaymentRetryMessageHandler(){window.removeEventListener("message",this.handlePaymentMessage),this.handlePaymentMessage=async(Q)=>{let W=Q.data;if(!W||typeof W!=="object"||!("success"in W))return;if(console.log("Payment message received:",W),this.paymentResponseTimeout)clearTimeout(this.paymentResponseTimeout),this.paymentResponseTimeout=null;let X=document.querySelector(this.config.selectors.modalSubmitButton);if(X)X.disabled=!0,X.textContent="Processing...";if(!W.success){if(console.error("Payment method submission failed:",W),X)X.disabled=!1,X.textContent="Click To Continue";return}window.removeEventListener("message",this.handlePaymentMessage);try{if(this.pendingProductId!==null){let Y=document.querySelector(this.config.selectors.modal);if(Y)Y.close();if(window._simulatePaymentDeclineEnabled!==void 0)window._simulatePaymentDeclineEnabled=!1,console.log("%c⚠️ PAYMENT RETRY: Decline simulation disabled for retry attempt","color: orange; font-weight: bold");await this.processPaymentWithMethodId(W.paymentMethodId,this.pendingProductId)}else console.error("No pending product ID found for payment retry")}catch(Y){if(console.error("Payment retry failed:",Y),X)X.disabled=!1,X.textContent="Click To Continue"}},window.addEventListener("message",this.handlePaymentMessage)}async handlePaymentRetrySubmit(){console.log("Submitting payment retry form");let Q=document.querySelector(this.config.selectors.modalSubmitButton);if(Q)Q.disabled=!0,Q.textContent="Processing...";let W=document.querySelector("#keap-payment-method");if(!W||!W.submit){if(console.error("Payment method element not ready"),Q)Q.disabled=!1,Q.textContent="Click To Continue";return}this.paymentResponseTimeout=setTimeout(()=>{if(console.warn("No payment response received after 5 seconds"),Q)Q.disabled=!1,Q.textContent="Click To Continue"},5000),W.submit()}disableButton(Q,W){let X=W.querySelector(".elButtonMain");if(X instanceof HTMLElement)W.dataset.originalText=X.textContent||"",X.textContent="Processing...";W.dataset.originalBgColor=W.style.background,W.style.background="rgba(200, 200, 200, 0.7)",Q.style.pointerEvents="none",W.style.pointerEvents="none",W.style.opacity="0.7",W.style.cursor="default",W.classList.add("disabled")}}if(G)new A().init();else console.log("Keap OTO script loaded in non-browser environment. DOM manipulation skipped.");
